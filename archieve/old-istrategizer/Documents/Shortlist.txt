============================================================
LEGEND:													 
Tasks are ordered in a tree like shape where tasks in the same
tab level can be peformed in parallel:
Example:
1.1 XXX
	1.2 YYY
	1.3 WWW
2.1 ZZZ
1.1 and 2.1 can be performed in parallel, and 1.2 and 1.3 can be executed in parallel but in sequence with 1.1
where 1.2 and 1.3 depends on 1.1
============================================================

# Build action is fully working
	1.1 Fix retry build if failed.
# Encapsulate the entity searching algorithm inside the player and use predicates for entity matching
# Build base goal is fully working
	1.1. Rewrite the build base goal using the new APIs in the EngineAssist
# Redesign the gamestate to be more generic
	1.1. Decide the generic gamestate by refactoring and abstracting the old gamestate
		1.2. Implement gamestate retrieval in starcraft game model
# Implement resource sharing synchronization
	1.1 Consider Workers, build areas, production resources (minerals, etc..) as sharable and each action should get the onwership of each resource during usage
# Simple resource management
	1.1. Develop gather resource action
		1.2. Develop a resource manager using FSM or whatever possible and use the gather action to issue gather commands
			1.3. Develop the required communication between the OLCBP and the resource manager
# Design the micromanagement infrastructure
	1.1. Decide how the micromanagement will be integrated with OLCBP and what are its main components
# Enhance Case-Visualizer
	1. Implement "Save", "Save As" and "Auto Save" options similar to those in MS Word
	2. Remove the unnecessary tabs
	3. Support full screen and auto-fit layout
	4. Support zooming and/or scrolling in plan graph view
	5. Drop-down boxes of choosing enum values should be related
# Create VM for the dev environment.